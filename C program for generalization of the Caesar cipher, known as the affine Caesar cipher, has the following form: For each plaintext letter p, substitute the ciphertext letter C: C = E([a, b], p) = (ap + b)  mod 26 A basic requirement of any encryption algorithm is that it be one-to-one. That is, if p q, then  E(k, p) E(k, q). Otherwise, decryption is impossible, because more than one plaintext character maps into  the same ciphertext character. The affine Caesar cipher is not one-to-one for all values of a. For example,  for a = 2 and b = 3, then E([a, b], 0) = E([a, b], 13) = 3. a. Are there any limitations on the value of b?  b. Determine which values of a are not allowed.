#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function to compute GCD
int gcd(int a, int b) {
    if (b == 0)
        return a;
    return gcd(b, a % b);
}

// Affine encryption function
char affineEncryptChar(char p, int a, int b) {
    if (isalpha(p)) {
        int x = tolower(p) - 'a';
        int enc = (a * x + b) % 26;
        return isupper(p) ? (enc + 'A') : (enc + 'a');
    }
    return p; // Non-letters unchanged
}

int main() {
    char plaintext[1000];
    int a, b;

    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0';

    printf("Enter value for a (must be coprime with 26): ");
    scanf("%d", &a);
    printf("Enter value for b (0 to 25): ");
    scanf("%d", &b);

    if (gcd(a, 26) != 1) {
        printf("Invalid 'a'. It must be coprime with 26. Allowed values are: 1,3,5,...,25.\n");
        return 1;
    }

    printf("Encrypted text: ");
    for (int i = 0; i < strlen(plaintext); i++) {
        printf("%c", affineEncryptChar(plaintext[i], a, b));
    }
    printf("\n");

    return 0;
}
